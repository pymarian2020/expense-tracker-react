{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","year","day","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","key","id","ExpenseFilter","value","selected","onChange","event","onSelectYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","getFullYear","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","action","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","INITIAL_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"2aAeeA,MAZf,SAAqBC,GACnB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAOJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,KAAM,YAClDC,EAAML,EAAME,KAAKC,eAAe,QAAS,CAAEE,IAAK,YACtD,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,uBAAuBL,GACtC,yBAAKK,UAAU,sBAAsBF,GACrC,yBAAKE,UAAU,qBAAqBD,K,MCJ3BE,MAJf,SAAcP,GACZ,IAAMQ,EAAU,QAAUR,EAAMM,UAChC,OAAO,yBAAKA,UAAWE,GAAUR,EAAMS,W,MCY1BC,MAZf,SAAqBV,GACnB,OACE,kBAAC,EAAD,CAAMM,UAAU,gBACd,kBAAC,EAAD,CAAaJ,KAAMF,EAAME,OACzB,yBAAKI,UAAU,6BACb,4BAAKN,EAAMW,OACX,yBAAKL,UAAU,uBAAf,IAAuCN,EAAMY,W,MCUtCC,MAjBf,SAAsBb,GACpB,OAA2B,IAAvBA,EAAMc,MAAMC,OACP,wBAAIT,UAAU,2BAAd,qBAGP,wBAAIA,UAAU,iBACXN,EAAMc,MAAME,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,CACEC,IAAKD,EAAQE,GACbR,MAAOM,EAAQN,MACfC,OAAQK,EAAQL,OAChBV,KAAMe,EAAQf,Y,MCOTkB,MAnBf,SAAuBpB,GAKrB,OACE,yBAAKM,UAAU,kBACb,yBAAKA,UAAU,4BACb,iDACA,4BAAQe,MAAOrB,EAAMsB,SAAUC,SARrC,SAA2BC,GACzBxB,EAAMyB,aAAaD,EAAME,OAAOL,SAQ1B,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,Y,mBCIKM,MAjBf,SAAkB3B,GAChB,IAAI4B,EAAgB,KAIpB,OAHI5B,EAAM6B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/B,EAAMqB,MAAQrB,EAAM6B,SAAY,KAAO,KAGnE,yBAAKvB,UAAU,aACb,yBAAKA,UAAU,oBACb,yBACEA,UAAU,kBACV0B,MAAO,CAAEC,OAAQL,MAGrB,yBAAKtB,UAAU,oBAAoBN,EAAMkC,SCKhCC,MAjBf,SAAenC,GACb,IAAMoC,EAAmBpC,EAAMqC,WAAWrB,KAAI,SAACsB,GAAD,OAAeA,EAAUjB,SACjEkB,EAAWT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAE7B,OACE,yBAAK9B,UAAU,SACZN,EAAMqC,WAAWrB,KAAI,SAACsB,GAAD,OACpB,kBAAC,EAAD,CACEpB,IAAKoB,EAAUJ,MACfb,MAAOiB,EAAUjB,MACjBQ,SAAUU,EACVL,MAAOI,EAAUJ,aCWZO,MAvBf,SAAuBzC,GACrB,IAD4B,EACtB0C,EAAkB,CACtB,CAAER,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,GACvB,CAAEa,MAAO,MAAOb,MAAO,IAbG,cAgBNrB,EAAM2C,UAhBA,IAgB5B,2BAAsC,CAAC,IAA5B1B,EAA2B,QAEpCyB,EADqBzB,EAAQf,KAAK0C,YACJvB,OAASJ,EAAQL,QAlBrB,8BAoB5B,OAAO,kBAAC,EAAD,CAAOyB,WAAYK,K,MCQbG,MAxBf,SAAkB7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBjD,EAAMc,MAAMoC,QAAO,SAACjC,GAC3C,OAAOA,EAAQf,KAAKiD,cAAcC,aAAeL,KAGnD,OACE,6BACE,kBAAC,EAAD,CAAMzC,UAAU,SACd,kBAAC,EAAD,CACEgB,SAAUyB,EACVtB,aAbR,SAA2BrB,GACzB4C,EAAgB5C,MAcZ,kBAAC,EAAD,CAAeuC,SAAUM,IACzB,kBAAC,EAAD,CAAcnC,MAAOmC,O,mBCkDdI,MAxEf,SAAqBrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KAyBA,OACE,0BAAMC,SAfR,SAAuBpC,GACrBA,EAAMqC,iBAEN,IAAMC,EAAc,CAClBnD,MAAO2C,EACP1C,QAAS4C,EACTtD,KAAM,IAAI6D,KAAKL,IAEjB1D,EAAMgE,kBAAkBF,GACxBP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIgBM,OAAO,IACpC,yBAAK3D,UAAU,yBACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,8BAAjB,SACA,2BACEA,UAAU,6BACV4D,KAAK,OACL7C,MAAOiC,EACP/B,SAjCV,SAA4BC,GAC1B+B,EAAgB/B,EAAME,OAAOL,WAmCzB,yBAAKf,UAAU,yBACb,2BAAOA,UAAU,8BAAjB,UACA,2BACEA,UAAU,6BACV4D,KAAK,SACL7C,MAAOmC,EACPW,IAAI,OACJC,KAAK,OACL7C,SAzCV,SAA6BC,GAC3BiC,EAAiBjC,EAAME,OAAOL,WA2C1B,yBAAKf,UAAU,yBACb,2BAAOA,UAAU,8BAAjB,QACA,2BACEA,UAAU,6BACV4D,KAAK,OACL7C,MAAOqC,EACPS,IAAI,aACJ3B,IAAI,aACJjB,SAjDV,SAA2BC,GACzBmC,EAAenC,EAAME,OAAOL,YAoD1B,yBAAKf,UAAU,wBACb,4BAAQ4D,KAAK,SAASG,QAASrE,EAAMsE,UAArC,UAGA,4BAAQJ,KAAK,UAAb,kBClCOK,MAhCf,SAAoBvE,GAClB,MAAkC8C,oBAAS,GAA3C,mBAAO0B,EAAP,KAAkBC,EAAlB,KAkBA,OACE,yBAAKnE,UAAU,eACXkE,EAGA,kBAAC,EAAD,CACER,kBAvBR,SAAgCU,GAC9B,IAAMZ,EAAW,2BACZY,GADY,IAEfvD,GAAIW,KAAK6C,SAASvB,aAEpBpD,EAAM4E,aAAad,GACnBW,GAAa,IAkBPH,SAXR,WACEG,GAAa,MAMT,4BAAQJ,QAXd,WACEI,GAAa,KAUT,qBCtBFI,EAAmB,GAkBVC,MAhBf,WACE,MAAgChC,mBAAS+B,GAAzC,mBAAOlC,EAAP,KAAiBoC,EAAjB,KAOA,OACE,6BACE,kBAAC,EAAD,CAAYH,aARhB,SAA2B3D,GACzB8D,GAAY,SAACC,GACX,MAAM,CAAE/D,GAAR,mBAAoB0B,UAOpB,kBAAC,EAAD,CAAU7B,MAAO6B,MCXvBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2125be8f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.toLocaleString(\"en-US\", { year: \"numeric\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n}\nexport default Card;\n","import React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nfunction ExpenseItem(props) {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nfunction ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nfunction ExpenseFilter(props) {\n  function yearSelectHandler(event) {\n    props.onSelectYear(event.target.value);\n  }\n\n  return (\n    <div className=\"expense-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={yearSelectHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\nexport default ExpenseFilter;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  let barFillHeight = \"0%\";\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n}\nexport default ChartBar;\n","import React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMax = Math.max(...dataPointsValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // Starting with 0; January == 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoints}></Chart>;\n}\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n  function yearSelectHandler(year) {\n    setFilteredYear(year);\n  }\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"items\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onSelectYear={yearSelectHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  function titleChangeHandler(event) {\n    setEnteredTitle(event.target.value);\n  }\n  function amountChangeHandler(event) {\n    setEnteredAmount(event.target.value);\n  }\n  function dateChangeHandler(event) {\n    setEnteredDate(event.target.value);\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  }\n\n  return (\n    <form onSubmit={submitHandler} action=\"\">\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__controls\">\n          <label className=\"new-expense__control label\">Title</label>\n          <input\n            className=\"new-expense__control input\"\n            type=\"text\"\n            value={enteredTitle}\n            onChange={titleChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label className=\"new-expense__control label\">Amount</label>\n          <input\n            className=\"new-expense__control input\"\n            type=\"number\"\n            value={enteredAmount}\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__controls\">\n          <label className=\"new-expense__control label\">Date</label>\n          <input\n            className=\"new-expense__control input\"\n            type=\"date\"\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\nimport \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nfunction NewExpense(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  function saveExpenseDataHandler(enteredExpenseData) {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  }\n\n  function startEditingHandler() {\n    setIsEditing(true);\n  }\n\n  function cancelEditingHandler() {\n    setIsEditing(false);\n  }\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing ? (\n        <button onClick={startEditingHandler}>Add New Expense</button>\n      ) : (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancel={cancelEditingHandler}\n        />\n      )}\n    </div>\n  );\n}\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst INITIAL_EXPENSES = [];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(INITIAL_EXPENSES);\n  function addExpenseHandler(expense) {\n    setExpenses((prevExpenses) => {\n      return [expense, ...expenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}